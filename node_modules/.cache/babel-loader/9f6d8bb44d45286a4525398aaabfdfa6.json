{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/kevinmacaraeg/Documents/designcoin/sutromusic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/kevinmacaraeg/Documents/designcoin/sutromusic/src/components/Charts.jsx\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n\\n    padding: 10px 20px;\\n    display: flex;\\n    opacity: 0;\\n\\n    margin: 5px 0;\\n\\n    .albumCover {\\n        height: 60px;\\n        width: 60px;\\n        background-color: lightgray;\\n        margin: 1px 0;\\n    }\\n\\n    .songInfo{\\n        margin-left: 20px;\\n        opacity: 0;\\n    }\\n\\n    h1, h2, h3, h4, p {\\n        margin: 0;\\n    }\\n\\n    p {\\n        font-style: italic;\\n    }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n\\n    overflowY: scroll;\\n\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\n    display: flex;\\n\\n    .tab {\\n        padding: 10px 20px 8px;\\n        width: 100px;\\n        text-align: center;\\n    }\\n\\n    .tab:hover {\\n        background-color: yellow;\\n    }\\n\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\n    display: flex;\\n    flex-direction: column;\\n    max-width: 300px;\\n    position: fixed;\\n    right: 0;\\n    top: 0;\\n    background-color: white;\\n    border-left: 1px solid rgba(0,0,0,.3);\\n    min-height: 100vh;\\n\\n    h1 {\\n        margin: 0;\\n        font-size: 20px;\\n        text-align: center;\\n        border-bottom: 1px solid rgba(0,0,0,.3);\\n        padding: 13px 10px 10px 10px;\\n    }\\n\\n    .songTile:hover {\\n        margin: 50px;\\n    }\\n\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport anime from 'animejs';\nimport Typing from 'react-typing-animation';\nimport Prismic from \"prismic-javascript\";\nconst Wrapper = styled.div(_templateObject());\nconst Genres = styled.div(_templateObject2());\nconst SongContainer = styled.div(_templateObject3());\nconst SongTile = styled.div(_templateObject4());\n\nclass Charts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      charts: [\"Test\"]\n    };\n\n    this.loadCharts = () => {\n      const apiEndpoint = \"https://sutromusic.cdn.prismic.io/api/v2\";\n      Prismic.api(apiEndpoint).then(api => {\n        api.query(Prismic.Predicates.at(\"document.type\", \"listeningnow\")).then(response => {\n          if (response) {\n            this.setState({\n              charts: response.results\n            });\n          }\n        });\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.charts);\n  }\n\n  componentDidMount() {\n    console.log(this.state.charts);\n    this.loadCharts();\n    var tl = anime.timeline({\n      easing: 'easeOutExpo',\n      duration: 750\n    });\n    tl.add({\n      targets: '.container .songTile',\n      opacity: 1,\n      margin: 0,\n      delay: anime.stagger(50)\n    }, 1000).add({\n      targets: '.container .songInfo',\n      opacity: 1,\n      delay: anime.stagger(150)\n    }, 2000).add({\n      targets: '.container .songTile',\n      background: '#ffffff',\n      delay: anime.stagger(150)\n    }, 2000);\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"The Latest\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(Genres, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Indie\"), React.createElement(\"div\", {\n      className: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Electronic\"), React.createElement(\"div\", {\n      className: \"tab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Hip-Hop\")), React.createElement(SongContainer, {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, this.state.charts && this.state.charts.map((song, i) => React.createElement(SongTile, {\n      className: \"songTile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, console.log(song.data.dateReleased[0])))));\n  }\n\n}\n\nexport default Charts;","map":{"version":3,"sources":["/Users/kevinmacaraeg/Documents/designcoin/sutromusic/src/components/Charts.jsx"],"names":["React","Component","styled","anime","Typing","Prismic","Wrapper","div","Genres","SongContainer","SongTile","Charts","state","charts","loadCharts","apiEndpoint","api","then","query","Predicates","at","response","setState","results","componentDidUpdate","console","log","componentDidMount","tl","timeline","easing","duration","add","targets","opacity","margin","delay","stagger","background","render","map","song","i","data","dateReleased"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport anime from 'animejs'\nimport Typing from 'react-typing-animation';\nimport Prismic from \"prismic-javascript\";\n\n\nconst Wrapper = styled.div`\n\n    display: flex;\n    flex-direction: column;\n    max-width: 300px;\n    position: fixed;\n    right: 0;\n    top: 0;\n    background-color: white;\n    border-left: 1px solid rgba(0,0,0,.3);\n    min-height: 100vh;\n\n    h1 {\n        margin: 0;\n        font-size: 20px;\n        text-align: center;\n        border-bottom: 1px solid rgba(0,0,0,.3);\n        padding: 13px 10px 10px 10px;\n    }\n\n    .songTile:hover {\n        margin: 50px;\n    }\n\n`\n\nconst Genres = styled.div`\n\n    display: flex;\n\n    .tab {\n        padding: 10px 20px 8px;\n        width: 100px;\n        text-align: center;\n    }\n\n    .tab:hover {\n        background-color: yellow;\n    }\n\n`\n\nconst SongContainer = styled.div`\n\n    overflowY: scroll;\n\n`\nconst SongTile = styled.div`\n\n    padding: 10px 20px;\n    display: flex;\n    opacity: 0;\n\n    margin: 5px 0;\n\n    .albumCover {\n        height: 60px;\n        width: 60px;\n        background-color: lightgray;\n        margin: 1px 0;\n    }\n\n    .songInfo{\n        margin-left: 20px;\n        opacity: 0;\n    }\n\n    h1, h2, h3, h4, p {\n        margin: 0;\n    }\n\n    p {\n        font-style: italic;\n    }\n`\n\nclass Charts extends Component {\n\n    state = {\n        charts: [\"Test\"]\n    }\n\n    loadCharts = () => {\n        const apiEndpoint = \"https://sutromusic.cdn.prismic.io/api/v2\";\n\n        Prismic.api(apiEndpoint).then(api => {\n            api.query(\n                Prismic.Predicates.at(\"document.type\", \"listeningnow\")\n            ).then(response => {\n                if (response) {\n                    this.setState({ charts: response.results });\n                }\n            });\n        });\n    };\n\n    componentDidUpdate() {\n        console.log(this.state.charts)\n    }\n\n\n    componentDidMount() {\n\n        console.log(this.state.charts)\n        this.loadCharts()\n\n        var tl = anime.timeline({\n            easing: 'easeOutExpo',\n            duration: 750,\n\n        })\n\n        tl.add({\n            targets: '.container .songTile',\n            opacity: 1,\n            margin: 0,\n            delay: anime.stagger(50),\n        }, 1000).add({\n            targets: '.container .songInfo',\n            opacity: 1,\n            delay: anime.stagger(150),\n        }, 2000).add({\n            targets: '.container .songTile',\n            background: '#ffffff',\n            delay: anime.stagger(150),\n        }, 2000)\n\n    }\n\n    render() {\n        return (\n            <Wrapper className=\"wrapper\">\n                <h1>The Latest</h1>\n                <h1></h1>\n                <Genres>\n                    <div className=\"tab\">Indie</div>\n                    <div className=\"tab\">Electronic</div>\n                    <div className=\"tab\">Hip-Hop</div>\n                </Genres>\n                <SongContainer className=\"container\">\n                {this.state.charts && this.state.charts.map((song, i) => (\n                    <SongTile className=\"songTile\">\n                        {console.log(song.data.dateReleased[0])}\n                    </SongTile>\n                    ))}\n                </SongContainer>\n            </Wrapper>\n        );\n    }\n\n}\n\nexport default Charts;\n"]},"metadata":{},"sourceType":"module"}